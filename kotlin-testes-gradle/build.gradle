plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'jacoco'
}

group 'org.example'
version '1.0-SNAPSHOT'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
sourceCompatibility = "1.8"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "joda-time:joda-time:2.10.8"

    //Unit Tests
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "com.ninja-squad:springmockk:2.0.2"
    testImplementation 'io.kotest:kotest-runner-junit5-jvm:4.0.5' // for kotest framework
    testImplementation 'io.kotest:kotest-assertions-core-jvm:4.0.5' // for kotest core jvm assertions
    testImplementation 'io.kotest:kotest-property-jvm:4.0.5' // for kotest property test
    testImplementation "io.kotest:kotest-extensions-spring:4.0.5"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testCompile group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '4.0.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}